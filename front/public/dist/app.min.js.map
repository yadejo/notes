{"version":3,"sources":["app/app.ts","login/login.ts","notes/notes.ts","register/register.ts","templates.ts"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","state","url","template","authenticate","otherwise","app","login","LoginCtrl","$scope","loginService","this","$inject","LoginService","username","password","console","log","directive","templateUrl","controller","controllerAs","factory","notes","notes_1","NotesCtrl","notesService","$http","_this","onCheck","note","noteContainer","setTimeout","isComplete","$apply","filter","n","id","addNote","newNote","content","push","Note","length","addContainer","newContainerName","container","NoteContainer","removeContainer","confirm","Array","NotesService","name","register","RegisterCtrl","registerService","RegisterService","run","$templateCache","put"],"mappings":"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","file":"app.min.js","sourcesContent":["/// <reference path=\"../../../typings/index.d.ts\" />\r\n\r\nangular.module('notesApp', [\r\n    'app.login',\r\n    'app.register',\r\n    'app.templates',\r\n    'app.notes',\r\n    'ui.router'\r\n]).config(function($stateProvider, $urlRouterProvider){\r\n    $stateProvider\r\n        .state(\"notes\", {\r\n            url: \"/notes\",\r\n            template: '<notes></notes>',\r\n            authenticate:true\r\n        })\r\n        .state(\"login\", {\r\n            url: \"/login\",\r\n            template: '<login></login>',\r\n            authenticate:false\r\n        })\r\n        .state(\"register\", {\r\n            url:\"/register\",\r\n            template: '<register></register>',\r\n            authenticate:false\r\n        });\r\n\r\n        $urlRouterProvider.otherwise(\"/login\");\r\n});","/// <reference path=\"../../../typings/index.d.ts\" />\r\n\r\nmodule app.login {\r\n\r\n    'use strict';\r\n\r\n    export interface ILoginCtrl {}\r\n\r\n    export class LoginCtrl implements ILoginCtrl {\r\n        static $inject = [\"$scope\", \"loginService\"];\r\n        constructor(\r\n            public $scope: ng.IScope,\r\n            public loginService: LoginService\r\n        ){}\r\n    }\r\n\r\n    export interface ILoginService {\r\n        login(username: string, password: string): void;\r\n    }\r\n    export class LoginService implements ILoginService {\r\n        public login = (username: string, password:string) =>{\r\n            console.log(username + \" \" + password);\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('app.login', [])\r\n        .directive(\"login\", function(): ng.IDirective {\r\n            return {\r\n                templateUrl: 'app-templates/login/login.html',\r\n                controller:  LoginCtrl,\r\n                controllerAs: 'loginVM'\r\n            };\r\n        })\r\n        .controller(\"loginCtrl\", LoginCtrl)\r\n        .factory(\"loginService\", [() => new app.login.LoginService()]);\r\n}\r\n","/// <reference path=\"../../../typings/index.d.ts\" />\r\n\r\nmodule app.notes {\r\n\r\n    export interface INotesCtrl { }\r\n\r\n    export interface INotesScope extends ng.IScope {\r\n        notes: Array<NoteContainer>;\r\n        newContainerName: string;\r\n    }\r\n\r\n    export class NotesCtrl implements INotesCtrl {\r\n        static $inject = [\"$scope\", \"notesService\", \"$http\"];\r\n\r\n        constructor(\r\n            public $scope: INotesScope,\r\n            public notesService: NotesService,\r\n            public $http: ng.IHttpService\r\n        ) {\r\n            //var notes = notesService.loadNotes();\r\n            var notes = new Array<NoteContainer>();\r\n            $scope.notes = notes;\r\n        }\r\n\r\n        onCheck = (note: Note, noteContainer: NoteContainer) => {\r\n            setTimeout(() => {\r\n                if (note.isComplete) {\r\n                    this.$scope.$apply(function () {\r\n                        noteContainer.notes = noteContainer.notes.filter((n) => { return n.id != note.id });\r\n                    });\r\n                }\r\n            }, 3000)\r\n\r\n\r\n        }\r\n\r\n        addNote = (noteContainer: NoteContainer) => {\r\n            if (noteContainer.newNote.content) {\r\n                noteContainer.notes.push(noteContainer.newNote)\r\n                noteContainer.newNote = new Note(noteContainer.notes.length, \"\");\r\n            }\r\n\r\n        }\r\n\r\n        addContainer = () => {\r\n            if (this.$scope.newContainerName) {\r\n                var container = new NoteContainer(this.$scope.notes.length, this.$scope.newContainerName);\r\n                this.$scope.notes.push(container);\r\n                this.$scope.newContainerName = \"\";\r\n            }\r\n        }\r\n\r\n        removeContainer = (noteContainer: NoteContainer) => {\r\n            if (noteContainer.notes.length != 0) {\r\n                if (confirm(\"Do you really want to delete this container\")) {\r\n                    this.$scope.notes = this.$scope.notes.filter((n) => { return n.id != noteContainer.id });\r\n\r\n                }\r\n            }\r\n            else {\r\n                this.$scope.notes = this.$scope.notes.filter((n) => { return n.id != noteContainer.id });\r\n            }\r\n        }\r\n    }\r\n\r\n    export interface INotesService {\r\n        // loadNotes(): Array<NoteContainer>;\r\n    }\r\n    export class NotesService implements INotesService {\r\n        \r\n    }\r\n\r\n    class NoteContainer {\r\n        id: number;\r\n        name: string;\r\n        notes: Array<Note>;\r\n        newNote: Note;\r\n\r\n        constructor(id: number, name: string) {\r\n            this.id = id;\r\n            this.name = name;\r\n            this.newNote = new Note(0, \"\");\r\n            this.notes = new Array<Note>();\r\n        }\r\n\r\n    }\r\n\r\n    class Note {\r\n        id: number;\r\n        isComplete: boolean;\r\n        content: string;\r\n\r\n        constructor(id: number, content: string, isComplete: boolean = false) {\r\n            this.id = id;\r\n            this.content = content;\r\n            this.isComplete = isComplete;\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('app.notes', [])\r\n        .directive(\"notes\", function (): ng.IDirective {\r\n            return {\r\n                templateUrl: 'app-templates/notes/notes.html',\r\n                controller: NotesCtrl,\r\n                controllerAs: 'notesVM'\r\n            };\r\n        })\r\n        .controller(\"notesCtrl\", NotesCtrl)\r\n        .factory(\"notesService\", [() => new app.notes.NotesService()]);\r\n}\r\n","/// <reference path=\"../../../typings/index.d.ts\" />\r\n\r\nmodule app.register {\r\n\r\n    'use strict';\r\n\r\n    export interface IRegisterCtrl {}\r\n\r\n    export class RegisterCtrl implements IRegisterCtrl {\r\n        static $inject = [\"$scope\", \"registerService\"];\r\n        constructor(\r\n            public $scope: ng.IScope,\r\n            public registerService: RegisterService\r\n        ){}\r\n    }\r\n\r\n    export interface IRegisterService {\r\n        register(username: string, password: string): void;\r\n    }\r\n    export class RegisterService implements IRegisterService {\r\n        public register = (username: string, password:string) =>{\r\n            console.log(username + \" \" + password);\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('app.register', [])\r\n        .directive(\"register\", function(): ng.IDirective {\r\n            return {\r\n                templateUrl: 'app-templates/register/register.html',\r\n                controller:  RegisterCtrl,\r\n                controllerAs: 'registerVM'\r\n            };\r\n        })\r\n        .controller(\"registerCtrl\", RegisterCtrl)\r\n        .factory(\"registerService\", [() => new app.register.RegisterService()]);\r\n}\r\n",null]}
{"version":3,"sources":["/public/dist/app/app.ts","/public/dist/login/login.ts","/public/dist/notes/notes.ts","/public/dist/templates.ts"],"names":["angular","module","app","login","LoginCtrl","$scope","loginService","this","$inject","LoginService","username","password","console","log","directive","templateUrl","controller","controllerAs","factory","notes","notes_1","NotesCtrl","notesService","$http","_this","onCheck","note","noteContainer","setTimeout","isComplete","$apply","filter","n","id","addNote","newNote","content","push","Note","length","addContainer","newContainerName","container","NoteContainer","removeContainer","confirm","Array","NotesService","name","run","$templateCache","put"],"mappings":"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","file":"app.min.js","sourcesContent":["/// <reference path=\"../../../typings/index.d.ts\" />\n\nangular.module('notesApp', [\n    'app.login',\n    'app.templates',\n    'app.notes'\n]);\n","/// <reference path=\"../../../typings/index.d.ts\" />\n\nmodule app.login {\n\n    'use strict';\n\n    export interface ILoginCtrl {}\n\n    export class LoginCtrl implements ILoginCtrl {\n        static $inject = [\"$scope\", \"loginService\"];\n        constructor(\n            public $scope: ng.IScope,\n            public loginService: LoginService\n        ){}\n    }\n\n    export interface ILoginService {\n        login(username: string, password: string): void;\n    }\n    export class LoginService implements ILoginService {\n        public login = (username: string, password:string) =>{\n            console.log(username + \" \" + password);\n        }\n    }\n\n    angular\n        .module('app.login', [])\n        .directive(\"login\", function(): ng.IDirective {\n            return {\n                templateUrl: 'app-templates/login/login.html',\n                controller:  LoginCtrl,\n                controllerAs: 'loginVM'\n            };\n        })\n        .controller(\"loginCtrl\", LoginCtrl)\n        .factory(\"loginService\", [() => new app.login.LoginService()]);\n}\n","/// <reference path=\"../../../typings/index.d.ts\" />\n\nmodule app.notes {\n\n    export interface INotesCtrl { }\n\n    export interface INotesScope extends ng.IScope {\n        notes: Array<NoteContainer>;\n        newContainerName: string;\n    }\n\n    export class NotesCtrl implements INotesCtrl {\n        static $inject = [\"$scope\", \"notesService\", \"$http\"];\n\n        constructor(\n            public $scope: INotesScope,\n            public notesService: NotesService,\n            public $http: ng.IHttpService\n        ) {\n            //var notes = notesService.loadNotes();\n            var notes = new Array<NoteContainer>();\n            $scope.notes = notes;\n        }\n\n        onCheck = (note: Note, noteContainer: NoteContainer) => {\n            setTimeout(() => {\n                if (note.isComplete) {\n                    this.$scope.$apply(function () {\n                        noteContainer.notes = noteContainer.notes.filter((n) => { return n.id != note.id });\n                    });\n                }\n            }, 3000)\n\n\n        }\n\n        addNote = (noteContainer: NoteContainer) => {\n            if (noteContainer.newNote.content) {\n                noteContainer.notes.push(noteContainer.newNote)\n                noteContainer.newNote = new Note(noteContainer.notes.length, \"\");\n            }\n\n        }\n\n        addContainer = () => {\n            if (this.$scope.newContainerName) {\n                var container = new NoteContainer(this.$scope.notes.length, this.$scope.newContainerName);\n                this.$scope.notes.push(container);\n                this.$scope.newContainerName = \"\";\n            }\n        }\n\n        removeContainer = (noteContainer: NoteContainer) => {\n            if (noteContainer.notes.length != 0) {\n                if (confirm(\"Do you really want to delete this container\")) {\n                    this.$scope.notes = this.$scope.notes.filter((n) => { return n.id != noteContainer.id });\n\n                }\n            }\n            else {\n                this.$scope.notes = this.$scope.notes.filter((n) => { return n.id != noteContainer.id });\n            }\n        }\n    }\n\n    export interface INotesService {\n        // loadNotes(): Array<NoteContainer>;\n    }\n    export class NotesService implements INotesService {\n        \n    }\n\n    class NoteContainer {\n        id: number;\n        name: string;\n        notes: Array<Note>;\n        newNote: Note;\n\n        constructor(id: number, name: string) {\n            this.id = id;\n            this.name = name;\n            this.newNote = new Note(0, \"\");\n            this.notes = new Array<Note>();\n        }\n\n    }\n\n    class Note {\n        id: number;\n        isComplete: boolean;\n        content: string;\n\n        constructor(id: number, content: string, isComplete: boolean = false) {\n            this.id = id;\n            this.content = content;\n            this.isComplete = isComplete;\n        }\n    }\n\n    angular\n        .module('app.notes', [])\n        .directive(\"notes\", function (): ng.IDirective {\n            return {\n                templateUrl: 'app-templates/notes/notes.html',\n                controller: NotesCtrl,\n                controllerAs: 'notesVM'\n            };\n        })\n        .controller(\"notesCtrl\", NotesCtrl)\n        .factory(\"notesService\", [() => new app.notes.NotesService()]);\n}\n",null]}
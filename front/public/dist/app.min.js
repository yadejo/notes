var myApp=angular.module("notesApp",["app.login","app.register","app.templates","app.notes","app.intercept","ui.router","app.shared","angular-loading-bar","ngAnimate"]).config(function(t,e,n,r){t.state("notes",{url:"/notes",template:"<notes></notes>",authenticate:!0}).state("login",{url:"/login",template:"<login></login>",authenticate:!1,params:{email:""}}).state("register",{url:"/register",template:"<register></register>",authenticate:!1}),e.otherwise("/login"),n.interceptors.push("authInterceptorService"),angular.extend(r,{positionClass:"toast-bottom-right",progressBar:!0,closeButton:!0})}).run(function(t,e,n){t.$on("$stateChangeStart",function(t,r,o,a,i){"register"!==r.name&&"login"!==r.name||!n.isLoggedIn()||(e.transitionTo("notes"),t.preventDefault()),r.authenticate&&!n.isLoggedIn()&&(e.transitionTo("login"),t.preventDefault())})}),MainCtrl=function(){function t(t,e){this.$scope=t,this.authService=e}return t.$inject=["$scope","authService"],t}();myApp.controller("mainCtrl",MainCtrl);var app;!function(t){var e;!function(t){"use strict";var e=function(){function t(t,e,n){this.$scope=t,this.authService=e,this.$state=n;var r=n.params.email;r&&(t.username=r)}return t.$inject=["$scope","authService","$state"],t}();t.LoginCtrl=e,angular.module("app.login",[]).directive("login",function(){return{templateUrl:"app-templates/login/login.html",controller:e,controllerAs:"loginVM"}}).controller("loginCtrl",e)}(e=t.login||(t.login={}))}(app||(app={}));var app;!function(t){var e;!function(t){var e=function(){function t(t,e,n){var a=this;this.$scope=t,this.notesService=e,this.$http=n,this.onCheck=function(t,e){setTimeout(function(){t.IsComplete&&(a.notesService.removeNote(e.ID,t.ID),a.$scope.$apply(function(){e.Notes=e.Notes.filter(function(e){return e.ID!=t.ID})}))},3e3)},this.addNote=function(t){t.newNote&&t.newNote.Content&&a.notesService.addNote(t.ID,t.newNote.Content).then(function(e){t.newNote.ID=e.data,t.Notes.push(t.newNote),t.newNote=new o})},this.addContainer=function(){a.$scope.newContainerName&&a.notesService.addContainer(a.$scope.newContainerName).then(function(t){var e=new r;e.ID=t.data,e.Name=a.$scope.newContainerName,a.$scope.notes.push(e),a.$scope.newContainerName=""})},this.removeContainer=function(t){0!=t.Notes.length?confirm("Do you really want to delete this container")&&(a.notesService.removeContainer(t.ID),a.$scope.notes=a.$scope.notes.filter(function(e){return e.ID!=t.ID})):(a.notesService.removeContainer(t.ID),a.$scope.notes=a.$scope.notes.filter(function(e){return e.ID!=t.ID}))};e.loadNotes().then(function(e){var n=JSON.stringify(e.data),r=JSON.parse(n);t.notes=r})}return t.$inject=["$scope","notesService","$http"],t}();t.NotesCtrl=e;var n=function(){function t(t,e){var n=this;this.$http=t,this.toastr=e,this.apiBase="https://notes.zawada.be/",this.loadNotes=function(){return n.$http.get(n.apiBase+"api/note",null)},this.addContainer=function(t){return n.$http.post(n.apiBase+"api/note?name="+t,null).success(function(t){return t}).error(function(t){n.toastr.error("Container was not created","Error")})},this.addNote=function(t,e){return n.$http.post(n.apiBase+"api/note/"+t+"?todo="+e,null).success(function(t){return t}).error(function(t){n.toastr.error("Container was not created","Error")})},this.removeNote=function(t,e){n.$http["delete"](n.apiBase+"api/note/"+t+"/"+e,null)},this.removeContainer=function(t){n.$http["delete"](n.apiBase+"api/note/"+t,null).then(function(t){})}}return t.factory=function(){var e=function(e,n){return new t(e,n)};return e},t}();t.NotesService=n;var r=function(){function t(){this.Notes=new Array,this.newNote=new o}return t}(),o=function(){function t(){}return t}();angular.module("app.notes",["toastr"]).directive("notes",function(){return{templateUrl:"app-templates/notes/notes.html",controller:e,controllerAs:"notesVM"}}).controller("notesCtrl",e).factory("notesService",n.factory())}(e=t.notes||(t.notes={}))}(app||(app={}));var app;!function(t){var e;!function(t){"use strict";var e=function(){function t(t,e){var n=this;this.$scope=t,this.authService=e,this.executeValidateEmail=function(){var t=n.$scope.registration.Email;n.$scope.validMail=n.validateEmail(t),n.$scope.showMailValidation=!n.$scope.validMail},this.validate=function(){if(!n.$scope.registration)return!1;var t=n.$scope.registration.Password,e=n.$scope.registration.ConfirmPassword,r=n.$scope.registration.Email;n.$scope.validMail=n.validateEmail(r),n.$scope.showMailValidation=!n.$scope.validMail,n.$scope.canRegister=t===e&&t.length>=6&&n.$scope.validMail},this.validateEmail=function(t){var e=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;return e.test(t)},t.register=function(t){e.register(t)},t.$watch("registration.Password",function(){n.validate()}),t.$watch("registration.ConfirmPassword",function(){n.validate()})}return t.$inject=["$scope","authService"],t}();t.RegisterCtrl=e,angular.module("app.register",[]).directive("register",function(){return{templateUrl:"app-templates/register/register.html",controller:e,controllerAs:"registerVM"}})}(e=t.register||(t.register={}))}(app||(app={}));var app;!function(t){var e;!function(t){var e=function(){function t(t,e,n){var r=this;this.$q=t,this.localStorageService=e,this.$injector=n,this.request=function(t){t.headers=t.headers||{};var e=r.localStorageService.get("authorizationData");return e&&(t.headers.Authorization="Bearer "+e.token),t},this.responseError=function(t){if(401===t.status){var e=r.localStorageService.get("authorizationData"),n=r.$injector.get("authService"),o=r.$injector.get("$state");e&&console.log("nope"),n.logout(),o.go("login")}return r.$q.reject(t)}}return t.factory=function(){var e=function(e,n,r){return new t(e,n,r)};return e},t}();t.AuthInterceptorService=e,angular.module("app.intercept",["LocalStorageModule"]).factory("authInterceptorService",e.factory())}(e=t.intercept||(t.intercept={}))}(app||(app={}));var app;!function(t){var e;!function(t){var e=function(){function t(t,e,n,r,o){var a=this;this.$http=t,this.$q=e,this.localStorageService=n,this.toastr=r,this.$state=o,this.serviceBase="https://notes.zawada.be/",this.loggedIn=!1,this.isLoggedIn=function(){var t=a.localStorageService.get("authorizationData");return!!t},this.userName=function(){var t=a.localStorageService.get("authorizationData");if(t){var e=t.username;return e.substring(0,e.indexOf("@"))}},this.login=function(t,e){var n="grant_type=password&username="+t+"&password="+e,r=a.$q.defer();return a.$http.post(a.serviceBase+"token",n,{headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(function(e){a.loggedIn=!0,a.localStorageService.set("authorizationData",{token:e.access_token,username:t}),a.$state.go("notes"),r.resolve(e)}).error(function(t){t?a.toastr.error(t.error_description,"Error"):a.toastr.error("Server must be down...","Error"),console.log(t),a.logout()}),r.promise},this.register=function(t){a.logout(),a.$http.post(a.serviceBase+"api/account/register",t,{headers:{"Content-Type":"application/json"}}).success(function(e){a.toastr.success("Redirecting you to login...","Registration successful"),setTimeout(function(){a.$state.go("login",{email:t.Email})},3e3)}).error(function(t){var e=t.ModelState,n=e[Object.keys(e)[0]];a.toastr.error(n[1],"Error")})},this.logout=function(){a.localStorageService.remove("authorizationData"),a.loggedIn=!1}}return t.factory=function(){var e=function(e,n,r,o,a){return new t(e,n,r,o,a)};return e},t.$inject=["$http","$q","localStorageService","toastr","$state"],t}();t.AuthService=e,angular.module("app.shared",["LocalStorageModule","toastr"]).factory("authService",e.factory())}(e=t.shared||(t.shared={}))}(app||(app={})),angular.module("app.templates",[]).run(["$templateCache",function(t){t.put("app-templates/login/login.html",'<div id="login-inject">\r\n\t<h2>Login</h2>\r\n\t<div ng-hide="loginVM.authService.isLoggedIn()">\r\n\t\r\n\t\t\r\n\t<form id="login-form" name="loginForm" ng-submit="loginVM.authService.login(username, password)">\r\n\t\t<div class="form-group">\r\n\t\t\t<label for="username">Username:</label>\r\n\t\t\t<input type="text" class="form-control" id="username" ng-model="username" required>\r\n\t\t</div>\r\n\t\t<div class="form-group">\r\n\t\t\t<label for="password">Password:</label>\r\n\t\t\t<input type="password" class="form-control" id="password" ng-model="password" required>\r\n\t\t</div>\r\n\r\n\t\t<button type="submit" class="btn btn-default" ng-disabled="loginForm.$invalid">Login</button> <span>or <a ui-sref="register">register</a></span>\r\n\t</form>\r\n</div>\r\n\r\n<div ng-show="loginVM.authService.isLoggedIn()">\r\n\t<p>You are already logged in, {{loginVM.authService.userName()}}</p>\r\n\t<p>Click <a href="" ng-click="loginVM.authService.logout()">here</a> to log out.</p>\r\n</div>\r\n</div>'),t.put("app-templates/notes/notes.html",'<div class="new-note-container">\r\n            <form ng-submit="notesVM.addContainer()">\r\n            <label for="new-container">New container: </label>\r\n                <div class="input-group">\r\n                \r\n                    <input type="text" class="form-control" ng-model="newContainerName">\r\n                    <span class="input-group-btn">\r\n                        <button class="btn btn-default" type="button">+</button>\r\n                    </span>\r\n                </div>\r\n            </form>\r\n</div>\r\n\r\n<div class="note-wrapper">\r\n\r\n        <div class="note-container" ng-repeat="notecontainer in notes">\r\n            <div class="note-container-name"><span>{{notecontainer.Name}} </span> <span title="Remove container" ng-click="notesVM.removeContainer(notecontainer)" class="glyphicon glyphicon-trash remove-container-icon"></span></div>\r\n            \r\n            <div class="note" ng-repeat="note in notecontainer.Notes">\r\n                <label class="note-name" ng-class="{\'note-completed\': note.IsComplete}"><input type="checkbox" ng-model="note.IsComplete" ng-change="notesVM.onCheck(note, notecontainer)"> {{note.Content}}</label>\r\n            </div>\r\n            <form ng-submit="notesVM.addNote(notecontainer)">\r\n                <div class="input-group note-add-container">\r\n                    <input type="text" class="form-control" ng-model="notecontainer.newNote.Content">\r\n                        <span class="input-group-btn">\r\n                        <button class="btn btn-default" type="submit">+</button>\r\n                    </span>\r\n                </div>\r\n            </form>\r\n\r\n             \r\n        </div>\r\n\r\n</div>'),t.put("app-templates/register/register.html",'<div id="register-inject">\r\n\r\n\t<h2>Register</h2>\r\n<form id="register-form" name="registerForm" ng-submit="register(registration)" ng-init="valid=false">\r\n        <div class="form-group">\r\n\t\t\t<label for="email">Email:</label>\r\n\t\t\t<input class="form-control" id="email" ng-model="registration.Email" ng-blur="registerVM.executeValidateEmail()" required>\r\n\t\t</div>\r\n\t\t<div class="form-group">\r\n\t\t\t<label for="password">Password:</label>\r\n\t\t\t<input type="password" class="form-control" id="password" ng-model="registration.Password" required>\r\n\t\t</div>\r\n\r\n        <div class="form-group">\r\n\t\t\t<label for="confirm-password">Confirm password:</label>\r\n\t\t\t<input type="password" class="form-control" id="confirm-password" ng-model="registration.ConfirmPassword" required>\r\n\t\t</div>\r\n\r\n\t\t<p style="color:red;" ng-show="registration.Password!=registration.ConfirmPassword && registration.ConfirmPassword">Passwords must match</p>\r\n\t\t<p style="color: red;" ng-show="registration.Password.length < 6">Password must be at least 6 characters</p>\r\n\t\t<p style="color: red;" ng-show="showMailValidation">Please enter a valid e-mail address</p>\r\n\r\n\t\t<button type="submit" class="btn btn-default" ng-disabled="!canRegister">Register</button> <span>or back to <a ui-sref="login">login</a></span>\r\n\t</form>\r\n\r\n</div>')}]);
//# sourceMappingURL=app.min.js.map

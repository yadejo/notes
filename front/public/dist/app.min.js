angular.module("notesApp",["app.login","app.register","app.templates","app.notes","ui.router","app.shared","angular-loading-bar","ngAnimate"]).config(function(t,e){t.state("notes",{url:"/notes",template:"<notes></notes>",authenticate:!0}).state("login",{url:"/login",template:"<login></login>",authenticate:!1}).state("register",{url:"/register",template:"<register></register>",authenticate:!1}),e.otherwise("/login")}).run(function(t,e,n){t.$on("$stateChangeStart",function(t,r,o,i,s){r.authenticate&&!n.isLoggedIn()&&(e.transitionTo("login"),t.preventDefault())})});var app;!function(t){var e;!function(e){var n=function(){function t(t,e,n){var r=this;this.$scope=t,this.notesService=e,this.$http=n,this.onCheck=function(t,e){setTimeout(function(){t.isComplete&&r.$scope.$apply(function(){e.notes=e.notes.filter(function(e){return e.id!=t.id})})},3e3)},this.addNote=function(t){t.newNote.content&&(t.notes.push(t.newNote),t.newNote=new i(t.notes.length,""))},this.addContainer=function(){if(r.$scope.newContainerName){var t=new o(r.$scope.notes.length,r.$scope.newContainerName);r.$scope.notes.push(t),r.$scope.newContainerName=""}},this.removeContainer=function(t){0!=t.notes.length?confirm("Do you really want to delete this container")&&(r.$scope.notes=r.$scope.notes.filter(function(e){return e.id!=t.id})):r.$scope.notes=r.$scope.notes.filter(function(e){return e.id!=t.id})};var s=new Array;t.notes=s}return t.$inject=["$scope","notesService","$http"],t}();e.NotesCtrl=n;var r=function(){function t(){}return t}();e.NotesService=r;var o=function(){function t(t,e){this.id=t,this.name=e,this.newNote=new i(0,""),this.notes=new Array}return t}(),i=function(){function t(t,e,n){void 0===n&&(n=!1),this.id=t,this.content=e,this.isComplete=n}return t}();angular.module("app.notes",[]).directive("notes",function(){return{templateUrl:"app-templates/notes/notes.html",controller:n,controllerAs:"notesVM"}}).controller("notesCtrl",n).factory("notesService",[function(){return new t.notes.NotesService}])}(e=t.notes||(t.notes={}))}(app||(app={}));var app;!function(t){var e;!function(t){"use strict";var e=function(){function t(t,e){this.$scope=t,this.authService=e}return t.$inject=["$scope","authService"],t}();t.LoginCtrl=e,angular.module("app.login",[]).directive("login",function(){return{templateUrl:"app-templates/login/login.html",controller:e,controllerAs:"loginVM"}}).controller("loginCtrl",e)}(e=t.login||(t.login={}))}(app||(app={}));var app;!function(t){var e;!function(e){"use strict";var n=function(){function t(t,e){this.$scope=t,this.registerService=e}return t.$inject=["$scope","registerService"],t}();e.RegisterCtrl=n;var r=function(){function t(){this.register=function(t,e){console.log(t+" "+e)}}return t}();e.RegisterService=r,angular.module("app.register",[]).directive("register",function(){return{templateUrl:"app-templates/register/register.html",controller:n,controllerAs:"registerVM"}}).controller("registerCtrl",n).factory("registerService",[function(){return new t.register.RegisterService}])}(e=t.register||(t.register={}))}(app||(app={}));var app;!function(t){var e;!function(t){var e=function(){function t(t,e,n,r){var o=this;this.$http=t,this.$q=e,this.localStorageService=n,this.toastr=r,this.serviceBase="http://localhost:56361/",this.loggedIn=!1,this.isLoggedIn=function(){return o.loggedIn},this.login=function(t,e){var n="grant_type=password&username="+t+"&password="+e,r=o.$q.defer();return o.$http.post(o.serviceBase+"token",n,{headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(function(t){o.loggedIn=!0,o.localStorageService.set("authorizationData",{token:t.access_token}),r.resolve(t)}).error(function(t){t||o.toastr.error("Server must be down...","Error"),console.log(t),o.logout()}),r.promise},this.logout=function(){o.localStorageService.remove("authorizationData"),o.loggedIn=!1}}return t.factory=function(){var e=function(e,n,r,o){return new t(e,n,r,o)};return e},t.$inject=["$http","$q","localStorageService"],t}();t.AuthService=e,angular.module("app.shared",["LocalStorageModule","toastr"]).factory("authService",e.factory())}(e=t.shared||(t.shared={}))}(app||(app={})),angular.module("app.templates",[]).run(["$templateCache",function(t){t.put("app-templates/notes/notes.html",'<div class="new-note-container">\r\n    <form class="form-inline" ng-submit="notesVM.addContainer()">\r\n        <div class="form-group">\r\n            <label for="new-container">New container: </label>\r\n            <input type="text" class="form-control" id="new-container" ng-model="newContainerName">\r\n        </div>\r\n\r\n        <button type="submit" class="btn btn-default">+</button>\r\n    </form>\r\n</div>\r\n\r\n<div class="note-wrapper">\r\n\r\n        <div class="note-container" ng-repeat="notecontainer in notes">\r\n            <div class="note-container-name"><span>{{notecontainer.name}} </span> <span title="Remove container" ng-click="notesVM.removeContainer(notecontainer)" class="glyphicon glyphicon-trash remove-container-icon"></span></div>\r\n            \r\n            <div class="note" ng-repeat="note in notecontainer.notes">\r\n                <label class="note-name" ng-class="{\'note-completed\': note.isComplete}"><input type="checkbox" ng-model="note.isComplete" ng-change="notesVM.onCheck(note, notecontainer)"> {{note.content}}</label>\r\n               \r\n            </div>\r\n\r\n             <form class="form-inline note-add-container" ng-submit="notesVM.addNote(notecontainer)">\r\n                 <div class="form-group">\r\n                     <input class="form-control" type="text" ng-model="notecontainer.newNote.content">\r\n                     <button class="btn btn-default" type="submit">+</button>\r\n                 </div>\r\n             </form>\r\n        </div>\r\n\r\n</div>'),t.put("app-templates/login/login.html",'<div id="login-inject">\r\n\r\n\t<h2>Login</h2>\r\n\r\n\t<form id="login-form" name="loginForm">\r\n\t\t<div class="form-group">\r\n\t\t\t<label for="username">Username:</label>\r\n\t\t\t<input type="text" class="form-control" id="username" ng-model="username" required>\r\n\t\t</div>\r\n\t\t<div class="form-group">\r\n\t\t\t<label for="password">Password:</label>\r\n\t\t\t<input type="password" class="form-control" id="password" ng-model="password" required>\r\n\t\t</div>\r\n\r\n\t\t<button type="button" class="btn btn-default" ng-click="loginVM.authService.login(username, password)" ng-disabled="loginForm.$invalid">Login</button> <span>or <a ui-sref="register">register</a></span>\r\n\t</form>\r\n\r\n</div>'),t.put("app-templates/register/register.html",'<div id="register-inject">\r\n\r\n\t<h2>Register</h2>\r\n<form id="register-form" name="registerForm">\r\n\t\t<div class="form-group">\r\n\t\t\t<label for="name">Name:</label>\r\n\t\t\t<input type="text" class="form-control" id="name" ng-model="name" required>\r\n\t\t</div>\r\n        <div class="form-group">\r\n\t\t\t<label for="email">Email:</label>\r\n\t\t\t<input type="email" class="form-control" id="email" ng-model="email" required>\r\n\t\t</div>\r\n\t\t<div class="form-group">\r\n\t\t\t<label for="password">Password:</label>\r\n\t\t\t<input type="password" class="form-control" id="password" ng-model="password" required>\r\n\t\t</div>\r\n\r\n        <div class="form-group">\r\n\t\t\t<label for="confirm-password">Confirm password:</label>\r\n\t\t\t<input type="password" class="form-control" id="confirm-password" ng-model="confirmPassword" required>\r\n\t\t</div>\r\n\r\n\t\t<button type="button" class="btn btn-default" ng-click="registerVM.registerService.register(maakditnog)" ng-disabled="registerForm.$invalid">Register</button> <span>or back to <a ui-sref="login">login</a></span>\r\n\t</form>\r\n\r\n</div>')}]);
//# sourceMappingURL=app.min.js.map
